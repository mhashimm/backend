sisdn {
  key = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3eWj3ufVpMtOrdTefrS0DV7X+yzjiYZ24MqazbGOyk5oxlogj4BLvXJnGIz05IWtOLkvczuNBk2o/gXduD11P8fxkkY1x8uWBun3oriMT1WpEa+6zIkKziXJEMxDg3pXGCXReuuTmN++f37B7/RXYy/uckjSi9X8vL7oIOF1dFdkHdQAhow5mGjoQiJcmuVyVzmpX6tmHKOFDlz19zDgp5TbIgCenofoZVWlLeWSIQb4KAJDZUA+/FovS/JFhB7sxSW8gB8hm/l9TjrSLHHM1m1+HTJgPTdEXuD3h0sSJLuLZat/yOW2YzPNoQiO17tdOt9muBB2xKKQQlnJrdJA9wIDAQAB"
//  key = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqt/2jggJbA/9El6q2izDEtOUqR4/kBHL8UGyKrthXuxVHZcEQO4YTsfhXMOLJHKKmE/lVvdjHYoFNTUHoKORR+EQOiN4Fgchq0wlr2DYAQkUxJafihv6tNjndh0SlGvnzLu6hz3N1b5kXUnKSVN8yiBS5k3b+AVAC/HBtnc3W/QbZaMsP7Y5JVWqw+yy+/EedzKsw9JvNee5io3uhrrBkbR5c9xhnZ9VxvGbyetidKmQSS26+r0XXljwqKdJmNaOtQGFnngyoTWY/xviUw7InH4tRgHriDI4YwlXKbHatR1CXTKJYm+wBfjfKdkAR0aFgm4P1VgW6lxyypnv+x9tdQIDAQAB"
  appEnv = "dist"
  admission {
    validationResponseTimeout     = 5 seconds
    invalidStateDUration          = 10 days
    # for acknowledgement from Processing Service
    processingAckTimeout          = 5 seconds
    # for the final response
    processingResponseTimeout     = 3 days
  }
  cors {
    allowedOrigins = "http://localhost:8000"
  }
  db = {
    host = "localhost"
    host = ${?POSTGRESQL_DB_HOST}
    port = "5432"
    port = ${?POSTGRESQL_DB_PORT}
    name = "sisdn"
    name = ${?POSTGRESQL_DB_NAME}
    user = "postgres"
    user = ${?POSTGRESQL_DB_USER}
    password = "mysecretpassword"
    password = ${?POSTGRESQL_DB_PASSWORD}
  }
}

h2mem1 = {
  url = "jdbc:h2:mem:test1"
  driver = org.h2.Driver
  connectionPool = disabled
  keepAliveConnection = true
}

mysqlocal = {
  url = "jdbc:mysql://localhost/sisdn"
  driver = com.mysql.jdbc.Driver
  properties = {
    databaseName = "sisdn"
    user = "root"
    password = "mypassword"
  }
  numThreads = 10
  connectionTimeout = 5000
  validationTimeout = 5000
}

mysql = {
  url = "jdbc:mysql://127.9.244.2/frontend"
  driver = com.mysql.jdbc.Driver
  properties = {
    databaseName = frontend
    user = adminYqSuJsi
    password = "${TRAVIS_OPENSHIFT_MYSQL_DB_PASSWORD}"
  }
  numThreads = 1
  connectionTimeout = 5000
  validationTimeout = 5000
}

postgres = {
  url = "jdbc:postgresql://"${sisdn.db.host}":"${sisdn.db.port}"/"${sisdn.db.name}
  driver = org.postgresql.Driver
  properties = {
    databaseName = ${sisdn.db.name}
    user = ${sisdn.db.user}
    password = ${sisdn.db.password}
  }
  numThreads = 2
  connectionTimeout = 5000
  validationTimeout = 5000
}

postgreslocal = {
  url = "jdbc:postgresql://localhost:5432/sisdn"
  driver = org.postgresql.Driver
  properties = {
    databaseName = sisdn
    user = postgres
    password = mysecretpassword
  }
  numThreads = 10
  connectionTimeout = 5000
  validationTimeout = 5000
}

akka {
  //loggers                     = ["akka.event.slf4j.Slf4jLogger"]
  //loglevel                    = "DEBUG"
  //logging-filter              = "akka.event.slf4j.Slf4jLoggingFilter"
 // router-misconfiguration     = on
  
  serializers {
    admissionSerilizer        = "sisdn.admission.AdmissionSerializer"
    proto                     = "akka.remote.serialization.ProtobufSerializer"
  }

  serialization-bindings {
    "com.google.protobuf.Message"         = proto
    #"sisdn.admission.AdmissionEvt"       = admissionSerilizer
    "sisdn.admission.SubmittedEvt"        = admissionSerilizer
    "sisdn.admission.ProcessedEvt"        = admissionSerilizer
    "sisdn.admission.ValidatedEvt"        = admissionSerilizer
    #"java.io.Serializable"               = none
  }

  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"
  }
}

akka-persistence-jdbc {
  slick {
    driver = "slick.driver.PostgresDriver"
    db {
      url = "jdbc:postgresql://"${sisdn.db.host}":"${sisdn.db.port}"/"${sisdn.db.name}
      user = "postgres"
      user = ${sisdn.db.user}
      password = "mysecretpassword"
      password = ${sisdn.db.password}
      driver = "org.postgresql.Driver"
      keepAliveConnection = on
      numThreads = 2
      queueSize = 100
    }
  }

  tables {
    journal {
      tableName = "journal"
      schemaName = ""
      columnNames {
        persistenceId = "persistence_id"
        sequenceNumber = "sequence_number"
        created = "created"
        tags = "tags"
        message = "message"
      }
    }

    deletedTo {
      tableName = "deleted_to"
      schemaName = ""
      columnNames = {
        persistenceId = "persistence_id"
        deletedTo = "deleted_to"
      }
    }

    snapshot {
      tableName = "snapshot"
      schemaName = ""
      columnNames {
        persistenceId = "persistence_id"
        sequenceNumber = "sequence_number"
        created = "created"
        snapshot = "snapshot"
      }
    }
  }

  query {
    separator = ","

  }
}